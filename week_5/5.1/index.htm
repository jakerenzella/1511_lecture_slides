<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<meta name="viewport" content="viewport-fit=cover, width=device-width, height=device-height, initial-scale=1" />
<link rel="stylesheet" href="engine/main.css">
<link rel="stylesheet" href="theme/zurich.css">
<link rel="stylesheet" href="engine/katex/katex.min.css">
<style>
:root{
--logo: ;
--darkaccent1color: #000;
--lightaccent1color: #FFF;
--accent2: #43aa8b;
--accent3: #f9c74f;
--accent4: #90be6d;
--accent5: #f8961e;
--accent6: #577590;
--lighttitletextcolor: #FFF;
--darktitletextcolor: #000;
--lightbodytextcolor: #FFF;
--darkbodytextcolor: #000;
--lightbackgroundcolor: #FFF;
--darkbackgroundcolor: #000;
--bodyfont: Helvetica;
--titlefont: Helvetica;
--lightframecolor: #FFFFFF;
--darkframecolor: #000000;
}Â 

</style>
</head>
<body class="responsive">
<div class="reveal">
<div class="slides">
<section class="fixed-size-headings light title-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-title" style="width: 100%; font-size: 1rem;">
        <div style=""><h2 id="week5lecture1">Week 5 Lecture 1</h2></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 1rem;">
        <div style=""><h2 id="toolstohelpyou">Tools to help you</h2>

<ul>
<li>DCC Help</li>
<li>DCC Sidekick</li>
<li>https://bytesized-prod.vercel.app</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light cover-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-cover" style="width: 100%; font-size: 1rem;">
        <div style=""><h1 id="style">Style</h1>

<p>How to write clean code</p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present fit-warning has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.391rem;">
        <div style=""><pre><code class="c hljs c-like"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">thingy</span> {</span>
    <span class="hljs-keyword">int</span> x;
    <span class="hljs-keyword">double</span> y;
};

<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">calcualte_result</span><span class="hljs-params">(struct thingy x, struct thingy y)</span> </span>{
    <span class="hljs-keyword">if</span>((x.x - y.y) &gt; (y.x - x.y)) {
    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((y.x - x.y) &gt; (x.x - y.y)) {
        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>
    } <span class="hljs-keyword">else</span> {
        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;
    }
}

<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>{
    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">thingy</span> <span class="hljs-title">x</span>;</span>
    x.x = <span class="hljs-number">50</span>;
    x.y = <span class="hljs-number">5.0</span>;
    
    y.x = <span class="hljs-number">45</span>;
    y.x = <span class="hljs-number">2.5</span>;

    calculate_result(x, y);
}
</code></pre></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light v-split-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 1rem;">
        <div style=""><h2 id="booksuggestion">Book suggestion</h2>

<ul>
<li>I don't recommend many books</li>
<li>This is a good one</li>
</ul></div>
        <figure style=""><img src="images/Screenshot%202023-06-12%20at%208.55.58%20pm.png.public.png" class=" size-contain position-center-center"></figure>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="fixed-size-headings light v-split-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 1rem;">
        <div style=""><h2 id="1511hasastyleguide">1511 has a style guide</h2>

<p>Follow the style guide (will be marked)</p>

<p>There is no <em>right</em> style guide, but you should follow it</p></div>
        <figure style=""><img src="images/Screenshot%202023-06-12%20at%208.57.36%20pm.png" class=" position-center-center"></figure>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="fixed-size-headings light default-container wide present fit-warning has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.344rem;">
        <div style=""><h2 id="letsfixthisup:">Let's fix this up:</h2>

<pre><code class="c hljs c-like"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">thingy</span> {</span>
    <span class="hljs-keyword">int</span> x;
    <span class="hljs-keyword">double</span> y;
};

<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">calcualte_result</span><span class="hljs-params">(struct thingy x, struct thingy y)</span> </span>{
    <span class="hljs-keyword">if</span>((x.x - y.y) &gt; (y.x - x.y)) {
    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((y.x - x.y) &gt; (x.x - y.y)) {
        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>
    } <span class="hljs-keyword">else</span> {
        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;
    }
}

<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>{
    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">thingy</span> <span class="hljs-title">x</span>;</span>
    x.x = <span class="hljs-number">50</span>;
    x.y = <span class="hljs-number">5.0</span>;
    
    y.x = <span class="hljs-number">45</span>;
    y.x = <span class="hljs-number">2.5</span>;

    calculate_result(x, y);
}
</code></pre></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light cover-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-cover" style="width: 100%; font-size: 1rem;">
        <div style=""><h1 id="commandlinearguments">Command Line Arguments</h1></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.906rem;">
        <div style=""><h2 id="sofar...">So far...</h2>

<ul>
<li><p>We can pass input into functions:</p>
<code class="hljs reasonml"><span class="hljs-built_in">int</span> cool<span class="hljs-constructor">_calculation(<span class="hljs-params">int</span> <span class="hljs-params">x</span>, <span class="hljs-params">int</span> <span class="hljs-params">y</span>)</span></code></li>
<li><code class="hljs angelscript"><span class="hljs-built_in">int</span> x</code>, <code class="hljs angelscript"><span class="hljs-built_in">int</span> y</code> are the input, or arguments into the function</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.953rem;">
        <div style=""><p>We can use the input to determine how the function runs</p>

<pre><code class="c hljs c-like"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">cool_calculation</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span> </span>{
    <span class="hljs-keyword">if</span> (x &gt; <span class="hljs-number">0</span>) {
        <span class="hljs-comment">// do something when x is positive</span>
    } <span class="hljs-keyword">else</span> {
        <span class="hljs-comment">// do something if x is negative</span>
    }
}
</code></pre></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light title-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-title" style="width: 100%; font-size: 1rem;">
        <div style=""><h2 id="howcanwedothisforentireprograms">How can we do this for entire programs?</h2></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light cover-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-cover" style="width: 100%; font-size: 1rem;">
        <div style=""><h1 id="commandlinearguments">Command Line Arguments</h1></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.859rem;">
        <div style=""><h2 id="commandlinearguments">Command Line Arguments</h2>

<ul>
<li>We can provide input via user input (<code class="hljs cpp">scanf</code>)</li>
<li>Maybe we don't want the input to come from the user, or we already have the input</li>
<li>We would like to be able to pass input to a program</li>
<li>We can modify <code class="hljs css"><span class="hljs-selector-tag">main</span></code> to allow for CLI</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.859rem;">
        <div style=""><h2 id="before">before</h2>

<pre><code class="c hljs c-like"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>{

}
</code></pre>

<h2 id="after">after</h2>

<pre><code class="c hljs c-like"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> *argv[])</span> </span>{
    <span class="hljs-comment">//...</span>
}
</code></pre></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light title-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-title" style="width: 100%; font-size: 1rem;">
        <div style=""><h2 id="quickdemo">Quick demo</h2></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 1rem;">
        <div style=""><h2 id="stringtoint">String to int</h2>

<ul>
<li>Sometimes we want to read in numbers</li>
<li>But all standard input is text-based

<ul>
<li><code class="hljs">6</code> is really <code class="hljs 1c"><span class="hljs-string">"6"</span></code></li>
</ul></li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.813rem;">
        <div style=""><h3 id="usetheatoifunctiontoconvertstringstointegers">Use the <code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">atoi</span><span class="hljs-params">()</span></span> function</code> to convert strings to integers</h3>

<ul>
<li><p>Stands for ASCII to Integer </p>
Included in <code class="hljs">stdlib.h</code></li>
<li><code class="hljs axapta">atoi(<span class="hljs-keyword">const</span> <span class="hljs-built_in">char</span> *<span class="hljs-built_in">str</span>)</code></li>
<li><code class="hljs ebnf"><span class="hljs-attribute">atol</span></code>, <code class="hljs ebnf"><span class="hljs-attribute">atof</span></code> and <code class="hljs ebnf"><span class="hljs-attribute">atoll</span></code> all exist (long, float, long long)</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.953rem;">
        <div style=""><h2 id="onemorething:">One more thing:</h2>

<ul>
<li>Counting while loops is common :</li>
</ul>

<pre><code class="c hljs c-like"><span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>
<span class="hljs-keyword">while</span> (i &lt; SOME_NUM) { i++; }
</code></pre>

<ul>
<li>So common, that a syntactical sugar exists that makes it a little easier</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present fit-warning has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.766rem;">
        <div style=""><h2 id="whileloop">While loop</h2>

<pre><code class="c hljs c-like"><span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>
<span class="hljs-keyword">while</span> (i &lt; SOME_NUM) {
    ...
    i++;
}
</code></pre>

<h2 id="forloop">For loop</h2>

<pre><code class="c hljs c-like"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; SOME_NUM; i++) {
    ...
}
</code></pre></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light title-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-title" style="width: 100%; font-size: 1rem;">
        <div style=""><h2 id="connect4">Connect 4</h2></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="fixed-size-headings light default-container wide present has-light-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default media-grid" style="width: 100%; font-size: 1rem;">
        <div style=""><h3 id="feedback">Feedback</h3>
<div class="single-image-wrapper"><figure><img src="images/25t2_lecture_qr.png" class=" position-center-center"></figure></div></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section></div>
</div>
<script src="engine/index.js"></script>
<script src="engine/pptxgen.min.js"></script>
<script src="engine/pfill.js"></script>
<script src="engine/published.js"></script>
<script>
Reveal.configure({
progress:true,
progress:true,
dependencies: [
  {
    src: "engine/highlight.js",
    sync: true,
    callback: function () {
      hljs.initHighlightingOnLoad();
    },
  },
],
});
</script>
</body>
</html>
